{"version":3,"file":"component---src-pages-admin-ui-sdk-app-registration-md-528565b70ed83dd38e9f.js","mappings":"mTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBAAqB,wBAE7B,gOACA,eACE,GAAM,qCAAmC,sBAClB,uBAAYC,WAAW,MAAI,eAA6B,UACjF,gCAAiB,uBAAYA,WAAW,KAAG,eAA6B,uCACxE,uDAAwC,uBAAYA,WAAW,KAAG,oBAAkC,MAAM,uBAAYA,WAAW,KAAG,2BACpI,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,6MAWhC,eACE,GAAM,oDAAkD,yBAC9B,uBAAYA,WAAW,MAAI,2BAAyC,UAChG,oDAAqC,uBAAYA,WAAW,KAAG,2BAAyC,kDACxG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,sOAUhC,eACE,GAAM,0CAAwC,WAClC,uBAAYA,WAAW,MAAI,yBAAuC,eAChF,gCAAiB,uBAAYA,WAAW,KAAG,yBAAuC,mFAAmF,uBAAYA,WAAW,KAAG,iBAA+B,cAAc,uBAAYA,WAAW,KAAG,mBAAiC,qBAAqB,cAAGA,WAAW,IACtU,KAAQ,yDAAuD,oBACtC,2CAC7B,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAI,YAAa,uBAAYA,WAAW,KAAG,aAA2B,uBAAuB,uBAAYA,WAAW,KAAG,gBAA8B,MACnK,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBAAe,qCAIlC,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAI,QAAS,uBAAYA,WAAW,KAAG,eAA6B,MAClF,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBAAe,oBAIlC,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAI,cAAe,uBAAYA,WAAW,KAAG,4BAA0C,sBACrG,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,uBAAqB,y4BA4C1C,6CAA8B,uBAAYA,WAAW,KAAG,mBAAiC,MAAM,uBAAYA,WAAW,KAAG,iBAA+B,UAAU,uBAAYA,WAAW,KAAG,iBAA+B,4CAC3N,sFAAuE,mBAAQA,WAAW,KAAG,aAAuB,+EAA+E,uBAAYA,WAAW,KAAG,YAA0B,6DAA6D,uBAAYA,WAAW,KAAG,YAA0B,MACxW,eACE,GAAM,4BAA0B,eAChB,uBAAYA,WAAW,MAAI,UAAwB,aACrE,sDAAuC,uBAAYA,WAAW,KAAG,UAAwB,qDACzF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,yEAGtC,yIAA0H,uBAAYA,WAAW,KAAG,UAAwB,gBAC5K,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,8aAYtC,eACE,GAAM,iCAA+B,eACrB,uBAAYA,WAAW,MAAI,mBAAiC,UAC9E,iCAAkB,uBAAYA,WAAW,KAAG,mBAAiC,KAAK,cAAGA,WAAW,IAC5F,KAAQ,sEAAoE,sBACjD,iBAC/B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,4EAKhC,4EAA6D,uBAAYA,WAAW,KAAG,mBAAiC,WACxH,eACE,GAAM,mCAAiC,sBAChB,uBAAYA,WAAW,MAAI,qBACpD,+EACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qMAahC,wEAGJ,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/admin-ui-sdk/app-registration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"app-ui-registration\"\n    }}>{`App UI registration`}</h1>\n    <p>{`Your app must be correctly configured with Adobe App Registry to use the Admin UI SDK to create a custom UI in Commerce. You must perform the following steps before submitting your app to be published.`}</p>\n    <h2 {...{\n      \"id\": \"add-or-update-the-installyml-file\"\n    }}>{`Add or update the `}<inlineCode parentName=\"h2\">{`install.yml`}</inlineCode>{` file`}</h2>\n    <p>{`Create an `}<inlineCode parentName=\"p\">{`install.yml`}</inlineCode>{` file in the root of your project.`}</p>\n    <p>{`Make sure you target the correct `}<inlineCode parentName=\"p\">{`extensionPointId`}</inlineCode>{`: `}<inlineCode parentName=\"p\">{`commerce/backend-ui/1`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`$schema: http://json-schema.org/draft-07/schema\n$id: https://adobe.io/schemas/app-builder-templates/1\n\ncategories:\n  - action\n  - ui\n\nextensions:\n  - extensionPointId: commerce/backend-ui/1\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-or-update-the-extension-manifestjson-file\"\n    }}>{`Create or update the `}<inlineCode parentName=\"h2\">{`extension-manifest.json`}</inlineCode>{` file`}</h2>\n    <p>{`Create or update your project `}<inlineCode parentName=\"p\">{`extension-manifest.json`}</inlineCode>{` file so that it is similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"commerce-first-app\",\n  \"displayName\": \"Commerce First App on App Builder\",\n  \"description\": \"Commerce First App on App Builder\",\n  \"platform\": \"web\",\n  \"id\": \"commerce-first-app\",\n  \"version\": \"1.0.0\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-an-extensionregistration-component\"\n    }}>{`Add an `}<inlineCode parentName=\"h2\">{`ExtensionRegistration`}</inlineCode>{` component`}</h2>\n    <p>{`Create an `}<inlineCode parentName=\"p\">{`ExtensionRegistration`}</inlineCode>{`  component that registers the menu configuration in the App Registry. Use the `}<inlineCode parentName=\"p\">{`adobe/uix-sdk`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`adobe-uix-guest`}</inlineCode>{` dependency. The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/uix/docs/overview/design/\"\n      }}>{`UI Extensibility`}</a>{` Guide describes this process further.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the `}<inlineCode parentName=\"p\">{`uix-guest`}</inlineCode>{` dependency in the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`\"@adobe/uix-guest\": \"^0.8.2\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create an `}<inlineCode parentName=\"p\">{`ExtensionRegistration.js`}</inlineCode>{` file as follows:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`import { register } from '@adobe/uix-guest';\n\nexport default function ExtensionRegistration() {\n  init().catch(console.error);\n  return <></>;\n }\n\n const extensionId = 'commerce-first-app'\n \n const init = async () => {\n   await register({\n     id: extensionId,\n     debug: false,\n     methods: {\n       extension: {\n         getId() {\n           return 'commerce-first-app';\n         }\n       },\n       menu: {\n         getItems() {\n           return [\n             {\n               id: 'ext_page',\n               title: 'First App on App Builder',\n               action: \\`uixpage/index/index/uix-ext/\\${extensionId}\\`,\n               parent: 'Magento_Backend::marketing',\n             },\n           ];\n         },\n       },\n       page: {\n         getTitle() {\n           return 'Commerce First App on App Builder';\n         },\n       },\n     },\n   }\n );\n};\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`Upon registration, the `}<inlineCode parentName=\"p\">{`extension:getId`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`menu:getItems`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`page:getTitle`}</inlineCode>{` methods should be defined for the app.`}</p>\n    <p>{`In this example, the merchant accesses the custom menu from the `}<strong parentName=\"p\">{`Marketing`}</strong>{` menu in the Commerce Admin. The title displayed in the menu is defined in `}<inlineCode parentName=\"p\">{`getItems`}</inlineCode>{`, whereas the title displayed on page load is defined in `}<inlineCode parentName=\"p\">{`getTitle`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"update-the-appjs-routing\"\n    }}>{`Update the `}<inlineCode parentName=\"h2\">{`App.js`}</inlineCode>{` routing`}</h2>\n    <p>{`Add the following route to your `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` file to define the correct routing to your app:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Route path={'index.html'} element={<ExtensionRegistration />} />\n`}</code></pre>\n    <p>{`Make sure that your main page is correctly routed to the index. Here is an example of the first app routing in the `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ErrorBoundary onError={onError} FallbackComponent={fallbackComponent}>\n  <BrowserRouter>\n      <Provider theme={lightTheme} colorScheme={'light'}>\n          <Routes>\n              <Route path={'index.html'} element={<ExtensionRegistration />} />\n              <Route index element={<MainPage runtime={props.runtime} ims={props.ims} />} />\n          </Routes>\n      </Provider>\n  </BrowserRouter>\n</ErrorBoundary>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-the-appconfigyaml-file\"\n    }}>{`Update the `}<inlineCode parentName=\"h2\">{`app.config.yaml`}</inlineCode>{` file`}</h2>\n    <p>{`Update the `}<inlineCode parentName=\"p\">{`app.config.yaml`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/configuration/\"\n      }}>{`configuration file`}</a>{` as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`extensions:\n  commerce/backend-ui/1:\n    $include: ext.config.yaml\n`}</code></pre>\n    <p>{`This file now declares extensions and redirects to an `}<inlineCode parentName=\"p\">{`ext.config.yaml`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"add-or-update-the-extconfigyaml\"\n    }}>{`Add or update the `}<inlineCode parentName=\"h2\">{`ext.config.yaml`}</inlineCode></h2>\n    <p>{`Your extension configuration file should look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`operations:\n  view:\n    - type: web\n      impl: index.html\nactions: actions\nweb: web-src\nruntimeManifest:\n  packages:\n    SampleExtension:\n      license: Apache-2.0\n      actions:\n`}</code></pre>\n    <p>{`Complete this file with the actions from your app.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}