{"version":3,"file":"component---src-pages-app-development-starter-kit-hooks-md-2b7ba9601a830915c575.js","mappings":"uSAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,GAHsBD,MAKtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,oBACH,qBACL,kBAAK,qOACL,kBAAK,yFACL,oBACE,eAAIC,WAAW,OAAK,uBAAYA,WAAW,MAAO,2CAEpD,SAACX,EAAW,CAACY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,wEACL,kBAAK,iCAA+B,cAAGC,WAAW,IAC9C,KAAQ,mBACL,iCAAqC,oDAC5C,eACE,GAAM,wBACH,yBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,wLAaP,eACE,GAAM,cACH,eACL,kBAAK,2CACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,UAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,kBAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,iBAEpD,kBAAK,8FACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,yCAEpD,kBAAK,4DAA0D,uBAAYA,WAAW,KAAM,gBAA6B,2BACzH,eACE,GAAM,yBACH,0BACL,kBAAK,kCAAgC,uBAAYA,WAAW,KAAM,yBAAsC,mBAAiB,uBAAYA,WAAW,KAAM,kCAA+C,+FAA6F,uBAAYA,WAAW,KAAM,UAAuB,MACtV,kBAAK,qDACL,mBAAG,mBAAQA,WAAW,KAAM,4BAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,qCAIP,mBAAG,mBAAQA,WAAW,KAAM,gCAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,iFAKP,eACE,GAAM,yBACH,WAAS,uBAAYA,WAAW,MAAO,QAAqB,gBACjE,kBAAK,mDAAiD,uBAAYA,WAAW,KAAM,UAAuB,yCAAuC,uBAAYA,WAAW,KAAM,mDAAgE,WAAS,uBAAYA,WAAW,KAAM,yBAAsC,MAC1T,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,oPAaP,eACE,GAAM,aACH,cACL,kBAAK,oBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,8GAQP,kBAAK,sBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,0EAOP,SAACX,EAAW,CAACY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,yCAAuC,cAAGC,WAAW,IACtD,KAAQ,yCACL,8BAAkC,uEAG7C,CAEAH,EAAWM,gBAAiB,C","sources":["webpack://commerce-extensibility/./src/pages/app-development/starter-kit/hooks.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"webhooks-example\"\n    }}>{`Webhooks example`}</h1>\n    <p>{`The Adobe Commerce Extensibility Starter Kit supports custom webhooks. This reference implementation demonstrates how to expose an entry point to perform a realtime check of the available stock for Adobe Commerce cart items.`}</p>\n    <p>{`The runtime action included is in the Starter Kit package in the following location:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`actions/webhook/check-stock/index.js`}</inlineCode></li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You must implement the stock-checking logic on an external service.`}</p>\n    <p>{`This runtime action uses the `}<a parentName=\"p\" {...{\n        \"href\": \"../../webhooks/\"\n      }}>{`Adobe Commerce webhook module`}</a>{` to allow intercepting flows in Adobe Commerce.`}</p>\n    <h2 {...{\n      \"id\": \"json-payload-example\"\n    }}>{`JSON payload example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"cart_id\": \"cart id\",\n    \"items\": [\n      {\n        \"item_id\": 1,\n        \"sku\": \"Product SKU\",\n        \"qty\": \"Cart item qty\"\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"validation\"\n    }}>{`Validation`}</h2>\n    <p>{`The following parameters are required:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data.cart_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data.items`}</inlineCode></li>\n    </ul>\n    <p>{`Sample validation logic is provided in the following location in the Starter Kit package.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webhook\\\\check-stock\\\\validator.js`}</inlineCode></li>\n    </ul>\n    <p>{`You can modify this file to add more validations to the `}<inlineCode parentName=\"p\">{`validateData`}</inlineCode>{` method, if necessary.`}</p>\n    <h2 {...{\n      \"id\": \"check-available-stock\"\n    }}>{`Check available stock`}</h2>\n    <p>{`This runtime example uses the `}<inlineCode parentName=\"p\">{`checkAvailableStock()`}</inlineCode>{` method in the `}<inlineCode parentName=\"p\">{`webhook\\\\check-stock\\\\stock.js`}</inlineCode>{` file. You must implement this logic to check stock availability for the items received in `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{`.`}</p>\n    <p>{`You will receive one of the following responses:`}</p>\n    <p><strong parentName=\"p\">{`Items stock available:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`return {\n  success: false\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Items stock not available:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`return {\n  success: false,\n  message: '<Your custom error message.>'\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"modify-env-parameters\"\n    }}>{`Modify `}<inlineCode parentName=\"h2\">{`.env`}</inlineCode>{` parameters`}</h2>\n    <p>{`You can access any environment parameters from `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{`. Add any required parameters to the `}<inlineCode parentName=\"p\">{`actions/webhook/check-stock/actions.config.yaml`}</inlineCode>{` under `}<inlineCode parentName=\"p\">{`check-stock -> inputs`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`check-stock:\n  function: check-stock/index.js\n  web: 'yes'\n  runtime: nodejs:16\n  inputs:\n    LOG_LEVEL: debug\n    \n    HERE_YOUR_PARAM: $YOUR_CUSTOM_PARAMETER\n    \n  annotations:\n    require-adobe-auth: false\n    final: true\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"responses\"\n    }}>{`Responses`}</h2>\n    <p>{`Error response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`return {   \n  statusCode: 200,\n  body: {\n    op: 'exception',\n    message: 'Error message'\n  }\n}\n`}</code></pre>\n    <p>{`Success response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`return {\n  statusCode: 200,\n  body: {\n    op: 'success'\n  }\n}\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`These responses are adapted from the `}<a parentName=\"p\" {...{\n        \"href\": \"../../webhooks/responses.md#responses\"\n      }}>{`Commerce webhook responses`}</a>{`. You can modify the response implementation in the code as needed.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}