{"version":3,"file":"component---src-pages-app-development-starter-kit-actions-overview-md-7d0b97e492ebf4cfb1f5.js","mappings":"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","sources":["webpack://commerce-extensibility/./src/pages/app-development/starter-kit/actions-overview.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport BetaNote from '/src/_includes/starter-kit-beta.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <BetaNote mdxType=\"BetaNote\" />\n    <h1 {...{\n      \"id\": \"actions-overview\"\n    }}>{`Actions overview`}</h1>\n    <p>{`The Adobe Commerce Extensibility Starter Kit includes boilerplate code and samples for the following types of actions:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`consumer`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`event handler`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`event ingestion`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`synchronous webhook`}</inlineCode></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`consumer`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`event handler`}</inlineCode>{` actions implement the business logic needed to synchronize data between Commerce and the external systems being integrated.`}</p>\n    <p>{`Additionally, boilerplate code, responses, and samples for event ingestion and synchronous webhook actions are provided.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The synchronous webhook responses for each action are configured for the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/extensibility/webhooks/\"\n      }}>{`Commerce webhook module`}</a>{`. To customize the responses for other implementations, modify the `}<inlineCode parentName=\"p\">{`responses.js`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"consumer-action\"\n    }}><inlineCode parentName=\"h2\">{`consumer`}</inlineCode>{` action`}</h2>\n    <p>{`The main purpose of this action is to route events to the `}<a parentName=\"p\" {...{\n        \"href\": \"#event-handler-action\"\n      }}><inlineCode parentName=\"a\">{`event handler`}</inlineCode>{` action`}</a>{`. Normally, this routing is determined by the name of the event received.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`consumer`}</inlineCode>{` action is subscribed to a set of events. In many cases, all the events originate from the same entity, such as the `}<inlineCode parentName=\"p\">{`product`}</inlineCode>{` entity. However, there are examples where a consumer receives events from multiple entities belonging to the same \"domain\", such as `}<inlineCode parentName=\"p\">{`order`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`shipment`}</inlineCode>{`. When the event provider receives an event, this runtime action will be automatically activated.`}</p>\n    <p>{`The response returned by a `}<inlineCode parentName=\"p\">{`consumer`}</inlineCode>{` action is expected to be consistent with the response received from the activation of the subsequent `}<inlineCode parentName=\"p\">{`event handler`}</inlineCode>{` action. For example, if the `}<inlineCode parentName=\"p\">{`event handler`}</inlineCode>{` action returns an `}<inlineCode parentName=\"p\">{`HTTP/400`}</inlineCode>{` status, the consumer action is expected to respond with the same status. This ensures that the event processing is appropriately retried based on the event handler action response.`}</p>\n    <p>{`When it receives an event that it does not know how to route, it is expected to return HTTP/400 status. This will prevent the event handling from being retried.`}</p>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`consumer`}</inlineCode>{` actions have the following response:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"success\"\n    }}>{`Success`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#successResponse\nreturn {\n  statusCode: 200,\n  body: {\n    type: 'EVENT TYPE',\n    response: {\n      // Response returned by the event handler action\n    }\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"failure\"\n    }}>{`Failure`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#errorResponse\nreturn {\n  error: {\n    statusCode: 400, // 404, 500, etc,\n    body : {\n      error: 'YOUR ERROR MESSAGE'\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"event-handler-action\"\n    }}><inlineCode parentName=\"h2\">{`event handler`}</inlineCode>{` action`}</h2>\n    <p>{`The main purpose of this action is to manage an event that notifies you about a change in one of the integrated systems. Typically, its business logic includes an API call to propagate the changes to the other system being integrated.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"#consumer-action\"\n      }}><inlineCode parentName=\"a\">{`consumer`}</inlineCode>{` action`}</a>{` synchronously activates these event handler actions to delegate the handling of an event.`}</p>\n    <p>{`The response returned by an event handler action includes a `}<inlineCode parentName=\"p\">{`statusCode`}</inlineCode>{` attribute. This attribute allows the consumer action to propagate the response HTTP status code upstream to properly reflect the event registration information located on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/events/docs/support/tracing/\"\n      }}>{`Debug Tracing`}</a>{` tab in the Adobe Developer Console.`}</p>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`event handler`}</inlineCode>{` actions have the following response:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"success-1\"\n    }}>{`Success`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#actionSuccessResponse\nreturn {\n  statusCode: 200,\n  body: {\n    success: true,\n    message: 'YOUR SUCCESS MESSAGE'\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"failure-1\"\n    }}>{`Failure`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#actionErrorResponse\nreturn {\n  statusCode: 400, // 404, 500, etc\n  body: {\n    success: false,\n    error: 'YOUR ERROR MESSAGE'\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"event-ingestion-action\"\n    }}>{`event ingestion action`}</h2>\n    <p>{`The main purpose of this runtime action is to provide an alternative method to deliver events to the integration, if the 3rd-party, back-office application cannot fulfill the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/events/docs/guides/api/eventsingress_api/\"\n      }}>{`Events Publishing API's`}</a>{` requirements.`}</p>\n    <p>{`For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"./ingestion-webhook.md\"\n      }}>{`Ingestion webhooks`}</a>{`.`}</p>\n    <p>{`To get the URL of the webhook, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio runtime action get ingestion/webhook --url\n`}</code></pre>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`event ingestion`}</inlineCode>{` actions have the following response:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"success-2\"\n    }}>{`Success`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#successResponse\nreturn {\n  statusCode: 200,\n  body: {\n    type: 'EVENT TYPE',\n    response: {\n      success: true,\n      message: 'Event published successfully'\n    }\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"failure-2\"\n    }}>{`Failure`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#errorResponse\nreturn {\n  error: {\n    statusCode: 400, // 404, 500, etc,\n    body : {\n      error: 'YOUR ERROR MESSAGE'\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"synchronous-webhook-action\"\n    }}>{`synchronous webhook action`}</h2>\n    <p>{`The contents of the `}<inlineCode parentName=\"p\">{`./actions/webhook`}</inlineCode>{` directory expose a webhook that can be invoked synchronously from Commerce to affect the behavior of a particular business flow.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`./actions/webhook/check-stock`}</inlineCode>{` folder provides a `}<a parentName=\"p\" {...{\n        \"href\": \"./webhooks-example.md\"\n      }}>{`reference implementation`}</a>{` of a synchronous webhook action.`}</p>\n    <p>{`To get the URL of the webhook, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio runtime action get webhook/check-stock --url\n`}</code></pre>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`synchronous webhook`}</inlineCode>{` actions have the following response:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"success-3\"\n    }}>{`Success`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#webhookSuccessResponse\nreturn {\n  statusCode: 200,\n  body: {\n    op: 'success'\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"failure-3\"\n    }}>{`Failure`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ./actions/responses.js#webhookSuccessResponse\nreturn {\n  error: {\n    statusCode: 200,\n    body : {\n      op: 'exception'\n      message: 'YOUR ERROR MESSAGE'\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineAlert","CodeBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}